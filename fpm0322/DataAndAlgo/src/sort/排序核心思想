基本的排序算法：
	冒泡排序、插入排序、选择排序、归并排序、快速排序、计数排序、基数排序、桶排序
	核心原理：
		冒泡排序：比较相邻的两个元素
		插入排序：分为已排序区间和未排序区间，每次从未排序区间取第一个元素在已排序取件找到合适位置插入，并保证已排序区间一直有序
		选择排序：与插入排序相似，也分为已排序区间和未排序区间，不过每次会从未排序区间选择最小元素，将其放到已排序区间的末尾。
		归并排序：即归类合并，比如要对一个数组排序，先从中间将数组分为两部分，并分别对两部分进行排序，最后将有序的两部分合并在一起。（这里留个疑问，两部分是如何合并在一起的？）
			它的核心思想是分治思想，它是通过递归来实现的。这里就可以解答刚刚的疑问点了。
			归并排序过程：
			1、分解：通过递归，循环地将数组分解成两部分，最终分解成1个元素的单元
			2、合并：分解成功之后，通过递归，将每个集合比较并合并，最终合并成为一个有序的数组。
		快速排序：它也是利用的分治思想，它的原理是如果要对数组下标中的p和r之间的一组数据进行排序，我们选择p到r之间的任意一个数据作为pivot（分区点），
		我们遍历p与r之间的数据，将小于pivot的放在左边，大于pivot的放在右边。根据分治思想，我们使用递归循环对左边和右边进行排序，知道区间缩减为1，这样所有数据就都有序了。
		桶排序：核心思想是将要排序的数据分到几个有序的桶里，每个桶里的数据在单独排序，桶内排完序之后，再把每个桶里的数据依次按照顺序取出，组成的序列就是有序的了。
			桶排序比较适合用在外部排序中。所谓的外部排序就是数据存储在外部磁盘中，数据量比较大，内存有限，无法将数据全部加载到磁盘中。
		计数排序：计数排序其实是桶排序的一种特殊情况，当要排序的n个数据，所处范围不大的时候，如果最大值是k，则我们就把数据划分成k个桶，
			每个桶内的数据值都是一样的，省去了桶内排序的时间。计数排序只能用在数据范围不大的场景中，如果数据范围 k 比要数据n大很多，那就不适合了。而且计数排序只能给
			非负整数排序，如果是其他类型，要将其在不改变相对大小的情况下，转换成非负整数。
		基数排序：基数排序要求数据可以划分成高低位,位之间有递进关系。比较两个数,我们只需要比较高位，高位相同再比较低位，而且每一位的数据范围不能太大，
			因为基数排序需要借助桶排序或者计数排序来完成每一个位的排序工作。
			